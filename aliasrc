# written by maximilian-huber.de
# ~/.aliasrc

alias vi="vim"
alias vime="vim -u ~/.vimencrypt -x "
alias gvime="gvim -u ~/.vimencrypt -x "
alias tvim="tmux new vim"
alias svim="sudo vim -u /home/stefan/.vimrc "

alias tmx="tmux attach-session || tmux"

alias rsync="rsync -P"

#--------------------------------------------------------------------
#   Pacman
#--------------------------------------------------------------------
alias pacupg='sudo pacman -Syu'		# Synchronize with repositories and then upgrade packages that are out of date on the local system.
alias pacin='sudo pacman -S'		# Install specific package(s) from the repositories
alias pacins='sudo pacman -U'		# Install specific package not from the repositories but from a file 
alias pacre='sudo pacman -R'		# Remove the specified package(s), retaining its configuration(s) and required dependencies
alias pacrem='sudo pacman -Rns'		# Remove the specified package(s), its configuration(s) and unneeded dependencies
alias pacrep='pacman -Si'		# Display information about a given package in the repositories
alias pacreps='pacman -Ss'		# Search for package(s) in the repositories
alias pacloc='pacman -Qi'		# Display information about a given package in the local database
alias paclocs='pacman -Qs'		# Search for package(s) in the local database
alias paclo="pacman -Qdt"		# List all packages which are orphaned
alias pacc="sudo pacman -Scc"		# Clean cache - delete all not currently installed package files
alias paclf="pacman -Ql"		# List all files installed by a given package
alias pacexpl="pacman -D --asexp"	# Mark one or more installed packages as explicitly installed 
alias pacimpl="pacman -D --asdep"	# Mark one or more installed packages as non explicitly installed
#-------------------------------------------------------------------}}}
#   file specific
#-------------------------------------------------------------------{{{

alias rm='rm -I'
alias cp='cp -vi'

alias mv='mv -vi'
# mkmv - creates a new directory and moves the file into it, in 1 step
# Usage: mkmv <file> <directory>
mkmv() {
  mkdir "$2"
  mv "$1" "$2"
}

alias ls='ls --color=auto'
alias ll='ls -alF'
alias lll='ls -alF | less'
alias la='ls -CFA'
alias l='ls -CF'
alias l.='ls -dF .[a-zA-Z0-9]*' #only show dotfiles
lgrep() { ls -alF | egrep "$@"; }
 
ranger-cd() {
  tempfile='/tmp/chosendir'
  /usr/bin/ranger --choosedir="$tempfile" "${@:-$(pwd)}"
  test -f "$tempfile" &&
  if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
    cd -- "$(cat "$tempfile")"
  fi
  rm -f -- "$tempfile"
}
if [ -n "$BASH_VERSION" ]; then
  bind '"\C-o":" ranger-cd\C-m"'
elif [ -n "$ZSH_VERSION" ]; then
  bindkey -s '^o' '^qranger-cd\n'
fi


# Extract files from any archive
# Usage: ex <archive_name>
ex() {
  if [ -f $1 ] ; then
    opt=$( tr '[:upper:]' '[:lower:]' <<<"$1" )
    case $opt in
      *.tar.bz2) tar xjf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) unrar e $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip $1 ;;
      *.Z) uncompress $1 ;;
      *.7z) 7z x $1 ;;
      *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}


#Fix permissions
permfix() {
  for dir in "$@"; do
    find "$dir" -type d -exec chmod 755 {} \;
    find "$dir" -type f -exec chmod 644 {} \;
  done
}

geeqie() {
  command geeqie "$@" &
}

#-------------------------------------------------------------------}}}
#   documente / printing
#-------------------------------------------------------------------{{{

zathura() {
  command zathura "$@" &
}


#   LaTeX

mylatexmk(){
  grep -l '\\documentclass' *tex | \
    xargs latexmk -pdf -outdir=".latexmk_files" -pvc
}

mylualatexmk(){
  grep -l '\\documentclass' *tex | \
    xargs latexmk -pdflatex=lualatex -pdf -outdir=".lualatexmk_files" -pvc
}

myxelatexmk(){
  grep -l '\\documentclass' *tex | \
    xargs latexmk -pdflatex=xelatex -pdf -outdir=".xelatexmk_files" -pvc
}


#-------------------------------------------------------------------}}}



# vim: set filetype=sh foldmethod=marker foldmarker={{{,}}}:

